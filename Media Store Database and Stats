#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about which represents a digital media store.

--List all customers (full name, ID and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country != 'USA';

--Show only the Customers from Brazil.
SELECT *
FROM customers
WHERE Country = 'Brazil';

--Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM customers c
RIGHT JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE i.BillingCountry = 'Brazil';

--Show the Employees who are Sales Agents.
SELECT *
FROM employees
WHERE Title = "Sales Support Agent";

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM invoices;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT e.FirstName, e.LastName, i.InvoiceId
FROM employees e
JOIN customers c 
ON e.EmployeeId = c.SupportRepId
JOIN invoices i 
ON c.CustomerId = i.CustomerID;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId;

--How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

--What are the total sales for 2009?
SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--Write a query that includes the purchased track name with each invoice line ID.
SELECT i.InvoiceLineId, t.Name
FROM invoice_items i
LEFT JOIN tracks t
ON i.TrackId = t.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT i.InvoiceLineId, t.Name AS Track, ar.Name AS Artist
FROM invoice_items i
JOIN tracks t
ON i.TrackId = t.TrackId
JOIN albums al
ON t.AlbumId = al.AlbumId
JOIN artists ar
ON al.ArtistId = ar.ArtistID;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS Track, a.Title AS AlbumName, m.Name AS MediaType, g.Name As Genre
FROM tracks t
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN media_types m
ON t.MediaTypeId = m.MediaTypeId
JOIN genres g
ON t.GenreId = g.GenreId;

--Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName, ROUND(sum(i.Total),2) AS 'Total Sales'
FROM employees e
JOIN customers c
ON e.EmployeeId = c.SupportRepId
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = "Sales Support Agent"
GROUP BY e.LastName;

--Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(sum(i.Total),2) AS 'Total Sales'
FROM employees e
JOIN customers c
ON e.EmployeeId = c.SupportRepId
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = "Sales Support Agent" AND i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY e.LastName
ORDER BY ROUND(sum(i.Total),2) DESC
Limit 1;

--Which playlist(s) of songs costs the most money?
SELECT pt.PlaylistID, (COUNT(pt.TrackId)*t.UnitPrice) AS TotalPrice
FROM playlist_track pt
JOIN tracks t
ON pt.TrackId = t.TrackId
GROUP BY pt.playlistID
ORDER BY TotalPrice DESC
LIMIT 2;

--Which album had the most song sales, how many songs were sold, and what is the artist of that album?
SELECT COUNT(ii.TrackId) AS SongsSold, al.Title AS AlbumName, a.Name AS Artisit
FROM invoice_items ii
JOIN tracks t
ON ii.TrackID = t.TrackId
JOIN albums al
ON t.AlbumId = al.AlbumID
JOIN artists a
ON al.ArtistID = a.ArtistID
GROUP BY AlbumName
ORDER BY COUNT(ii.TrackId) DESC
LIMIT 1;
